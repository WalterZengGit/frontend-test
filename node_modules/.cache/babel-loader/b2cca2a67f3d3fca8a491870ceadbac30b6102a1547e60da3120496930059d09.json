{"ast":null,"code":"\"use strict\";\n\nimport { compact } from '../utils/compact.js';\nimport { isString, isObject } from '../utils/is.js';\nimport { mergeWith } from '../utils/merge.js';\nimport { walkObject } from '../utils/walk-object.js';\nimport { sortAtRules } from './sort-at-rules.js';\nconst importantRegex = /\\s*!(important)?/i;\nconst isImportant = v => isString(v) ? importantRegex.test(v) : false;\nconst withoutImportant = v => isString(v) ? v.replace(importantRegex, \"\").trim() : v;\nfunction createCssFn(context) {\n  const {\n    transform,\n    conditions,\n    normalize\n  } = context;\n  const mergeFn = mergeCss(context);\n  return function cssFn(...styleArgs) {\n    const styles = mergeFn(...styleArgs);\n    const normalized = normalize(styles);\n    const result = /* @__PURE__ */Object.create(null);\n    walkObject(normalized, (value, paths) => {\n      const important = isImportant(value);\n      if (value == null) return;\n      const [prop, ...selectors] = conditions.sort(paths).map(conditions.resolve);\n      if (important) {\n        value = withoutImportant(value);\n      }\n      let transformed = transform(prop, value) ?? /* @__PURE__ */Object.create(null);\n      transformed = walkObject(transformed, v => isString(v) && important ? `${v} !important` : v, {\n        getKey: prop2 => conditions.expandAtRule(prop2)\n      });\n      mergeByPath(result, selectors.flat(), transformed);\n    });\n    return sortAtRules(result);\n  };\n}\nfunction mergeByPath(target, paths, value) {\n  let acc = target;\n  for (const path of paths) {\n    if (!path) continue;\n    if (!acc[path]) acc[path] = /* @__PURE__ */Object.create(null);\n    acc = acc[path];\n  }\n  mergeWith(acc, value);\n}\nfunction compactFn(...styles) {\n  return styles.filter(style => isObject(style) && Object.keys(compact(style)).length > 0);\n}\nfunction mergeCss(ctx) {\n  function resolve(styles) {\n    const comp = compactFn(...styles);\n    if (comp.length === 1) return comp;\n    return comp.map(style => ctx.normalize(style));\n  }\n  return function mergeFn(...styles) {\n    return mergeWith({}, ...resolve(styles));\n  };\n}\nexport { createCssFn };","map":{"version":3,"names":["compact","isString","isObject","mergeWith","walkObject","sortAtRules","importantRegex","isImportant","v","test","withoutImportant","replace","trim","createCssFn","context","transform","conditions","normalize","mergeFn","mergeCss","cssFn","styleArgs","styles","normalized","result","Object","create","value","paths","important","prop","selectors","sort","map","resolve","transformed","getKey","prop2","expandAtRule","mergeByPath","flat","target","acc","path","compactFn","filter","style","keys","length","ctx","comp"],"sources":["C:/Users/USER/Documents/frontend-test/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js"],"sourcesContent":["\"use strict\";\nimport { compact } from '../utils/compact.js';\nimport { isString, isObject } from '../utils/is.js';\nimport { mergeWith } from '../utils/merge.js';\nimport { walkObject } from '../utils/walk-object.js';\nimport { sortAtRules } from './sort-at-rules.js';\n\nconst importantRegex = /\\s*!(important)?/i;\nconst isImportant = (v) => isString(v) ? importantRegex.test(v) : false;\nconst withoutImportant = (v) => isString(v) ? v.replace(importantRegex, \"\").trim() : v;\nfunction createCssFn(context) {\n  const { transform, conditions, normalize } = context;\n  const mergeFn = mergeCss(context);\n  return function cssFn(...styleArgs) {\n    const styles = mergeFn(...styleArgs);\n    const normalized = normalize(styles);\n    const result = /* @__PURE__ */ Object.create(null);\n    walkObject(normalized, (value, paths) => {\n      const important = isImportant(value);\n      if (value == null) return;\n      const [prop, ...selectors] = conditions.sort(paths).map(conditions.resolve);\n      if (important) {\n        value = withoutImportant(value);\n      }\n      let transformed = transform(prop, value) ?? /* @__PURE__ */ Object.create(null);\n      transformed = walkObject(\n        transformed,\n        (v) => isString(v) && important ? `${v} !important` : v,\n        { getKey: (prop2) => conditions.expandAtRule(prop2) }\n      );\n      mergeByPath(result, selectors.flat(), transformed);\n    });\n    return sortAtRules(result);\n  };\n}\nfunction mergeByPath(target, paths, value) {\n  let acc = target;\n  for (const path of paths) {\n    if (!path) continue;\n    if (!acc[path]) acc[path] = /* @__PURE__ */ Object.create(null);\n    acc = acc[path];\n  }\n  mergeWith(acc, value);\n}\nfunction compactFn(...styles) {\n  return styles.filter(\n    (style) => isObject(style) && Object.keys(compact(style)).length > 0\n  );\n}\nfunction mergeCss(ctx) {\n  function resolve(styles) {\n    const comp = compactFn(...styles);\n    if (comp.length === 1) return comp;\n    return comp.map((style) => ctx.normalize(style));\n  }\n  return function mergeFn(...styles) {\n    return mergeWith({}, ...resolve(styles));\n  };\n}\n\nexport { createCssFn };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}